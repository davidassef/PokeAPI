#!/usr/bin/env python3
"""
Teste de performance do bcrypt para identificar o problema de timeout.
"""
import time
from passlib.context import CryptContext
from core.config import settings

def test_bcrypt_performance():
    """Testa a performance do bcrypt com diferentes configura√ß√µes."""
    print("üîç Testando performance do bcrypt...")
    print(f"üìã Configura√ß√£o atual: bcrypt_rounds = {settings.bcrypt_rounds}")
    
    # Configura√ß√£o atual
    pwd_context_current = CryptContext(
        schemes=["bcrypt"],
        deprecated="auto",
        bcrypt__rounds=settings.bcrypt_rounds
    )
    
    # Configura√ß√£o otimizada
    pwd_context_fast = CryptContext(
        schemes=["bcrypt"],
        deprecated="auto",
        bcrypt__rounds=8
    )
    
    test_password = "123456"
    test_answer = "dog"
    
    print("\nüß™ Teste 1: Configura√ß√£o atual")
    start_time = time.time()
    hash1 = pwd_context_current.hash(test_password)
    password_time = time.time() - start_time
    print(f"‚è±Ô∏è Hash da senha: {password_time:.2f}s")
    
    start_time = time.time()
    hash2 = pwd_context_current.hash(test_answer)
    answer_time = time.time() - start_time
    print(f"‚è±Ô∏è Hash da resposta: {answer_time:.2f}s")
    
    total_time_current = password_time + answer_time
    print(f"‚è±Ô∏è Tempo total (atual): {total_time_current:.2f}s")
    
    print("\nüß™ Teste 2: Configura√ß√£o otimizada (8 rounds)")
    start_time = time.time()
    hash3 = pwd_context_fast.hash(test_password)
    password_time_fast = time.time() - start_time
    print(f"‚è±Ô∏è Hash da senha: {password_time_fast:.2f}s")
    
    start_time = time.time()
    hash4 = pwd_context_fast.hash(test_answer)
    answer_time_fast = time.time() - start_time
    print(f"‚è±Ô∏è Hash da resposta: {answer_time_fast:.2f}s")
    
    total_time_fast = password_time_fast + answer_time_fast
    print(f"‚è±Ô∏è Tempo total (otimizado): {total_time_fast:.2f}s")
    
    print("\nüìä An√°lise:")
    if total_time_current > 10:
        print(f"‚ùå PROBLEMA: Tempo atual ({total_time_current:.2f}s) causa timeout!")
        print(f"‚úÖ SOLU√á√ÉO: Tempo otimizado ({total_time_fast:.2f}s) √© aceit√°vel")
        print(f"üöÄ Melhoria: {total_time_current/total_time_fast:.1f}x mais r√°pido")
    else:
        print(f"‚úÖ Tempo atual ({total_time_current:.2f}s) √© aceit√°vel")
    
    print(f"\nüí° RECOMENDA√á√ÉO:")
    if total_time_current > 5:
        print(f"   - Reinicie o backend para aplicar bcrypt_rounds = 8")
        print(f"   - Isso reduzir√° o tempo de {total_time_current:.2f}s para {total_time_fast:.2f}s")
    else:
        print(f"   - Configura√ß√£o atual est√° adequada")

if __name__ == "__main__":
    test_bcrypt_performance()

[tool:pytest]
# Configuração do pytest para testes de autenticação

# Diretórios de teste
testpaths = tests

# Padrões de arquivos de teste
python_files = test_*.py *_test.py

# Padrões de classes de teste
python_classes = Test*

# Padrões de funções de teste
python_functions = test_*

# Marcadores personalizados
markers =
    unit: Testes unitários isolados
    integration: Testes de integração com banco de dados
    auth: Testes relacionados à autenticação
    slow: Testes que demoram mais para executar
    security: Testes de segurança
    api: Testes de API/endpoints

# Opções padrão
addopts = 
    -v
    --strict-markers
    --tb=short
    --disable-warnings
    --color=yes
    --durations=10
    --cov-report=term-missing
    --cov-report=html:test_reports/coverage_html
    --html=test_reports/report.html
    --self-contained-html

# Configurações de cobertura
[coverage:run]
source = app
omit = 
    */tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*
    */alembic/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Configurações de logging para testes
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Filtros de warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

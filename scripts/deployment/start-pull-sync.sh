#!/bin/bash

echo "üöÄ Iniciando Sistema Pull-Based de Sincroniza√ß√£o"
echo "================================================="

# Verificar se estamos no diret√≥rio correto
if [ ! -d "backend" ]; then
    echo "‚ùå Erro: Execute este script no diret√≥rio raiz do projeto"
    exit 1
fi

# Fun√ß√£o para verificar se um servi√ßo est√° rodando
check_service() {
    local url=$1
    local name=$2
    local max_attempts=10
    local attempt=1

    while [ $attempt -le $max_attempts ]; do
        if curl -s "$url" > /dev/null 2>&1; then
            echo "‚úÖ $name iniciado com sucesso"
            return 0
        fi
        echo "‚è≥ Aguardando $name iniciar (tentativa $attempt/$max_attempts)..."
        sleep 2
        ((attempt++))
    done

    echo "‚ùå Erro: $name n√£o est√° respondendo ap√≥s $max_attempts tentativas"
    return 1
}

# Iniciar Backend
echo "üì° Iniciando Backend FastAPI..."
cd backend
uvicorn main:app --reload --host 0.0.0.0 --port 8000 > backend.log 2>&1 &
BACKEND_PID=$!
cd ..

# Verificar se backend est√° rodando
if ! check_service "http://localhost:8000/health" "Backend"; then
    kill $BACKEND_PID 2>/dev/null
    exit 1
fi

# Iniciar Cliente HTTP
echo "üñ•Ô∏è  Iniciando Cliente HTTP..."
cd frontend
node client-server.js > client.log 2>&1 &
CLIENT_PID=$!
cd ..

# Verificar se cliente est√° rodando
if ! check_service "http://localhost:3001/api/client/health" "Cliente"; then
    kill $BACKEND_PID $CLIENT_PID 2>/dev/null
    exit 1
fi

# Perguntar se deve iniciar Frontend Ionic
read -p "üåê Iniciar Frontend Ionic? (s/n): " start_frontend
if [[ $start_frontend =~ ^[Ss]$ ]]; then
    echo "üåê Iniciando Frontend Ionic..."
    cd frontend
    ionic serve --port 8100 > ionic.log 2>&1 &
    IONIC_PID=$!
    cd ..
    sleep 3
    echo "‚úÖ Frontend iniciado na porta 8100"
fi

echo ""
echo "‚úÖ Sistema iniciado com sucesso!"
echo "üì° Backend: http://localhost:8000"
echo "üñ•Ô∏è  Cliente: http://localhost:3001"
if [[ $start_frontend =~ ^[Ss]$ ]]; then
    echo "üåê Frontend: http://localhost:8100"
fi
echo "üìö Docs: http://localhost:8000/docs"
echo ""
echo "üß™ Para testar: python test_pull_sync.py"
echo "üõë Para parar: Ctrl+C"
echo ""

# Fun√ß√£o para limpar processos ao sair
cleanup() {
    echo ""
    echo "üßπ Parando servi√ßos..."
    kill $BACKEND_PID $CLIENT_PID 2>/dev/null
    if [[ $start_frontend =~ ^[Ss]$ ]]; then
        kill $IONIC_PID 2>/dev/null
    fi
    echo "‚úÖ Servi√ßos parados"
    exit 0
}

# Registrar fun√ß√£o de cleanup
trap cleanup SIGINT SIGTERM

# Aguardar at√© que o usu√°rio pare os servi√ßos
wait
